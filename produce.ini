######################## Functions #####################
# []
# prelude =

#########################################################
# utils
#########################################################

[tsv/%{dataset}]
recipe =
    mkdir  -p datasets/%{dataset}/
    for f in `ls tsv/%{dataset}/*.tsv | xargs -n 1 basename`
    do
        python3 scripts/nlidata2prolog.py  tsv/%{dataset}/$f  datasets/%{dataset}/${f/.tsv/_sen.pl} --fmt sen.pl  --tokenize nltk_apo  --corpus %{dataset}
    done
    echo "--sen done--"

    for f in `ls tsv/%{dataset}/*.tsv | xargs -n 1 basename`
    do
        python3 scripts/nlidata2prolog.py  tsv/%{dataset}/$f  datasets/%{dataset}/${f/tsv/spl} --fmt spl  --tokenize nltk_apo --corpus %{dataset}
    done
    echo "--spl done--"

    for f in `ls datasets/%{dataset}/*.spl | xargs -n 1 basename`
    do
        cat datasets/%{dataset}/$f | ../candc/candc/bin/candc --models ../candc/models/models --output datasets/%{dataset}/${f/.spl/_cc_ccg.pl}  --candc-printer boxer --candc-parser-noisy_rules=false 2> datasets/%{dataset}/${f/.spl/_output.txt} 
        # cat datasets/%{dataset}/$f | ../candc/candc/bin/candc --models ../candc/models/models --output datasets/%{dataset}/${f/.spl/_cc_ccg.pl}  --candc-printer boxer --candc-parser-noisy_rules=false
        echo "${f/.spl/_cc_ccg.pl} Done"
        grep -o -i failed datasets/%{dataset}/${f/.spl/_output.txt}  | wc -l
    done
    echo "---ccg done---"

    python scripts/get_failed.py --dataset %{dataset}
    echo "---failed done---"




[datasets/%{dataset}]
recipe =
    python scripts/ccg_main.py --dataset %{dataset}
